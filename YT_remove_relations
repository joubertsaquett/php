<?php

get_header();
$metas  	= get_post_meta($post->ID);
$metas_acf	= maybe_unserialize($metas['acf_metas'][0]);

?>
	<link rel="stylesheet" href="<?php echo get_site_url(); ?>/wp-content/themes/divena/assets/css/embed.css">
	<div  id="" class="ui column grid stackable margin left fifty important margin right fifty important margin-mobile-zero important slideshow">
		<div class="row top aligned padding top zero important">
			<div class="ui column sixteen wide computer margin bottom fifty important">
				<div id="content-embed" class="ui row grid stackable top aligned padding-100 important">
					<?PHP 
						$paged = (get_query_var('paged')) ? absint( get_query_var('paged') ) : 1; 

						$args = array(
							'post_type' => 'mediacenter', 
							'post_status' => 'publish',
							'posts_per_page' => 9,
							'paged' => $paged,
						);

						$novo_loop = new WP_Query($args);
						if ( $novo_loop->have_posts() ){	
							foreach (  $novo_loop->posts  AS $post){
								$metas 		= get_post_meta($post->ID);
								$metas_acf	= $metas['url'][0];
					?>
								<div id="player___<?PHP echo $metas_acf;?>" onClick="prepareIframe(this.id);" class="player">
									<img class="play" src="<?php echo get_site_url(); ?>/wp-content/themes/divena/images/play.png">
									<img class="margin bottom-30 important tumbnail" src="https://img.youtube.com/vi/<?PHP echo $metas_acf; ?>/maxresdefault.jpg">
								</div>
								
					
								
					<?php
							} // endforeach
							echo '<div id="allJobsModal">';
							foreach (  $novo_loop->posts  AS $post){
								$metas 		= get_post_meta($post->ID);
								$metas_acf	= $metas['url'][0];
					?>
									<div class="hytPlayerWrapOuter modal" id="modal_<?PHP echo $metas_acf; ?>" style="width: 1px; height: 1px; overflow: hidden;">
										<div id="modalMovie_1" class="hytPlayerWrap modal-content"> 
											<iframe id="iframe_id" width="640" height="360" src="https://www.youtube.com/embed/<?PHP echo $metas_acf; ?>?rel=0&enablejsapi=1&theme=dark&autohide=2&modestbranding=1&showinfo=0" frameborder="0" ></iframe>
										</div>
									</div>
						<?PHP
							}// endforeach
							echo "</div>";
						} else {
							echo 'Nenhum seminovo encontrado com o termo buscado.';
						}
						
					?>
					<style type="text/css">
						.hytPlayerWrap.modal-content {
							display: flex;
							justify-content: center;
						    align-items: center;
						}
						.hytPlayerWrap.modal-content.ended {
							width: 640px;
							height: 360px;
						}
					</style>
					<script> 
						$('body').prepend($('#allJobsModal'));
						function prepareIframe(idMovie){
							var content = idMovie.split('___'); 
							var id = "modal_" + content[1];

							var modal = document.querySelector("#" + id).classList.toggle("show-modal"); 
							document.getElementById(id).style = null;

							$('#' + id).on(
								'click',
								function(e) {
									if(!$(e.target).hasClass('ended'))
									{
										document.querySelector("#" + id).classList.toggle("show-modal");
									}
								}
							);

						}
							"use strict";
							document.addEventListener('DOMContentLoaded', function() {
								// Activate only if not already activated
								if (window.hideYTActivated) return;
								// Activate on all players
								let onYouTubeIframeAPIReadyCallbacks = [];
								for (let playerWrap of document.querySelectorAll(".hytPlayerWrap")) {
									let playerFrame = playerWrap.querySelector("iframe");
									
									let tag = document.createElement('script');
									tag.src = "https://www.youtube.com/iframe_api";
									let firstScriptTag = document.getElementsByTagName('script')[0];
									firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
									
									let onPlayerStateChange = function(event) {
										if (event.data == YT.PlayerState.ENDED) {
											playerWrap.classList.add("ended");
										} else if (event.data == YT.PlayerState.PAUSED) {
											playerWrap.classList.add("paused");
										} else if (event.data == YT.PlayerState.PLAYING) {
											playerWrap.classList.remove("ended");
											playerWrap.classList.remove("paused");
										}
									};
									
									let player;
									onYouTubeIframeAPIReadyCallbacks.push(function() {
										player = new YT.Player(playerFrame, {
											events: {
												'onStateChange': onPlayerStateChange
											}
										});
									});
								
									playerWrap.addEventListener("click", function() {
										let playerState = player.getPlayerState();
										if (playerState == YT.PlayerState.ENDED) {
											player.seekTo(0);
										} else if (playerState == YT.PlayerState.PAUSED) {
											player.playVideo();
										}
									});
								}
								
								window.onYouTubeIframeAPIReady = function() {
									for (let callback of onYouTubeIframeAPIReadyCallbacks) {
										callback();
									}
								};
								
								window.hideYTActivated = true;
							});
							// $('#modalMovie_<?PHP echo $metas_acf ;?>').modal('show');
						// }
					</script>

					<div class="ui sixteen wide column stackable padding-50 important right aligned">
						<div class="pagination_div">
							<div class="margin-mobile-zero important margin twelve fifty important pagination">
								<?php
									echo paginate_links( array(
										'format'  => 'page/%#%',
										'current' => $paged,
										'total'   => $novo_loop->max_num_pages,
										'mid_size'        => 2,
										'prev_text'       => __('&lt;'),
										'next_text'       => __('&gt;')
									) );
								?>
							</div>
						</div>
					</div>
					
				</div>                        
			</div>
		</div>
	</div>
	
	
<?php 
get_footer();
?>









.modal {
    /* position: fixed; */
    position: absolute;
    z-index: 99;
    top: 0%;
    left: 0%;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transform: scale(1.1);
    transition: visibility 0s linear 0.25s, opacity 0.25s 0s, transform 0.25s;
}
.modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    overflow: auto;
    transform: translate(-50%, -50%);
    /* background-color: white;
    padding: 1rem 1.5rem;
    width: 24rem;
    border-radius: 0.5rem; */
}
.show-modal {
    opacity: 1;
    visibility: visible;
    transform: scale(1.0);
    transition: visibility 0s linear 0s, opacity 0.25s 0s, transform 0.25s;
}
.close-button {
    float: right;
    width: 1.5rem;
    line-height: 1.5rem;
    text-align: center;
    cursor: pointer;
    border-radius: 0.25rem;
    background-color: lightgray;
}


.hytPlayerWrap{
    display: inline-block;
    position: relative;
    /* width: 100%;
    height: 100%;
    z-index: 9999; */
}
.hytPlayerWrap.ended::after{
    content:"";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    cursor: pointer;
    background-color: black;
    background-repeat: no-repeat;
    background-position: center; 
    background-size: 64px 64px;
    background-image: url(data:image/svg+xml;utf8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMjgiIGhlaWdodD0iMTI4IiB2aWV3Qm94PSIwIDAgNTEwIDUxMCI+PHBhdGggZD0iTTI1NSAxMDJWMEwxMjcuNSAxMjcuNSAyNTUgMjU1VjE1M2M4NC4xNSAwIDE1MyA2OC44NSAxNTMgMTUzcy02OC44NSAxNTMtMTUzIDE1My0xNTMtNjguODUtMTUzLTE1M0g1MWMwIDExMi4yIDkxLjggMjA0IDIwNCAyMDRzMjA0LTkxLjggMjA0LTIwNC05MS44LTIwNC0yMDQtMjA0eiIgZmlsbD0iI0ZGRiIvPjwvc3ZnPg==);
}
 /* .hytPlayerWrap.paused::after{
    content:"";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    cursor: pointer;
    background-color: black;
    background-repeat: no-repeat;
    background-position: center; 
    background-size: 64px 64px;
    background-image: url(data:image/svg+xml;utf8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEiIHdpZHRoPSIxNzA2LjY2NyIgaGVpZ2h0PSIxNzA2LjY2NyIgdmlld0JveD0iMCAwIDEyODAgMTI4MCI+PHBhdGggZD0iTTE1Ny42MzUgMi45ODRMMTI2MC45NzkgNjQwIDE1Ny42MzUgMTI3Ny4wMTZ6IiBmaWxsPSIjZmZmIi8+PC9zdmc+);
}  */
